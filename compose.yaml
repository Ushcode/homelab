services:
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    environment:
      - PUID:1000
      - PGID:1000
    ports:
      - 3000:3000
    volumes:
      - ./homepage/config:/app/config
      - ./homepage/media:/app/public/images
      - /var/run/docker.sock:/var/run/docker.sock:ro # optional, for docker integrations
      - /media-server:/mnt/storage:ro
    restart: always

  plex:
    image: linuxserver/plex
    container_name: plex
    restart: always
    network_mode: host
    volumes:
      - ./plex/config:/config
      - /media-server/data/media/tv:/tv
      - /media-server/data/media/movies:/movies
      - /media-server/data/media/music:/music
    environment:
      - PUID=1000
      - PGID=1000
      - PLEX_UID=1000
      - PLEX_GUID=1000
      - TZ=Etc/UTC
      - VERSION=docker
      - PLEX_CLAIM=claim-i7Mwm5AsKJLpzbmktxR7

  overseer:
    image: linuxserver/overseerr:latest
    container_name: overseer
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      # - OVERSEER_DATABASE_URL=postgres:///overseerr.db # must configure
    volumes:
      - ./overseerr/config:/config
    ports:
      - 5055:5055

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=022
      - TZ=Etc/UTC
    volumes:
      - ./sonarr/config:/config
      - /media-server/data:/data
    ports:
      - "8989:8989"

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=022
      - TZ=Etc/UTC
    volumes:
      - ./radarr/config:/config
      - /media-server/data:/data
    ports:
      - 7878:7878

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=022
      - TZ=Etc/UTC
    volumes:
      - ./lidarr/config:/config
      - /media-server/data:/data
    ports:
      - 8686:8686
    restart: always

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=022
      - TZ=Etc/UTC
    volumes:
      - ./readarr/data:/config
      - /media-server/data:/data
    ports:
      - 8787:8787
    restart: always

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./prowlarr/config:/config
    # ports:
    #   - 9696:9696
    depends_on:
      - nordlynx
    network_mode: service:nordlynx

  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    volumes:
      - ./flaresolverr/config:/app/config
    container_name: flaresolverr

    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Etc/UTC
    # ports:
    #   - "${PORT:-8191}:8191"
    depends_on:
      - nordlynx
    network_mode: service:nordlynx
    restart: always

  unpackerr:
    image: golift/unpackerr
    container_name: unpackerr
    volumes:
      - /media-server/data:/data
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      # General config
      - UN_DEBUG=false
      - UN_LOG_FILE=
      - UN_LOG_FILES=10
      - UN_LOG_FILE_MB=10
      - UN_INTERVAL=2m
      - UN_START_DELAY=1m
      - UN_RETRY_DELAY=5m
      - UN_MAX_RETRIES=3
      - UN_PARALLEL=1
      - UN_FILE_MODE=0644
      - UN_DIR_MODE=0755
      # Sonarr Config
      - UN_SONARR_0_URL=http://192.168.0.254:8989
      - UN_SONARR_0_API_KEY=af9254e205bc44bd99a81e325d6a3ea4
      - UN_SONARR_0_PATHS_0=/data/torrents/tv-sonarr
      - UN_SONARR_0_PROTOCOLS=torrent
      - UN_SONARR_0_TIMEOUT=10s
      - UN_SONARR_0_DELETE_ORIG=false
      - UN_SONARR_0_DELETE_DELAY=5m
      # Radarr Config
      - UN_RADARR_0_URL=http://192.168.0.254:7878``
      - UN_RADARR_0_API_KEY=ec5b428b7ea04020bfa8df56024c79f8
      - UN_RADARR_0_PATHS_0=/data/torrents/radarr
      - UN_RADARR_0_PROTOCOLS=torrent
      - UN_RADARR_0_TIMEOUT=10s
      - UN_RADARR_0_DELETE_ORIG=false
      - UN_RADARR_0_DELETE_DELAY=5m
      # Lidarr Config
      - UN_LIDARR_0_URL=http://192.168.0.254:8686
      - UN_LIDARR_0_API_KEY=7c77e776e75c4f77b391ce011da1a7ff
      - UN_LIDARR_0_PATHS_0=/data/torrents/lidarr
      - UN_LIDARR_0_PROTOCOLS=torrent
      - UN_LIDARR_0_TIMEOUT=10s
      - UN_LIDARR_0_DELETE_ORIG=false
      - UN_LIDARR_0_DELETE_DELAY=5m
      # Readarr Config
      - UN_READARR_0_URL=http://192.168.0.254:8787
      - UN_READARR_0_API_KEY=a4b9c32a9ec94028bfb0adccadb432e4
      - UN_READARR_0_PATHS_0=/data/torrents/readarr
      - UN_READARR_0_PROTOCOLS=torrent
      - UN_READARR_0_TIMEOUT=10s
      - UN_READARR_0_DELETE_ORIG=false
      - UN_READARR_0_DELETE_DELAY=5m
    # secrets:
    #   - sonarr_api_key
    #   - radarr_api_key
    #   - lidarr_api_key
    #   - readarr_api_key
    security_opt:
      - no-new-privileges:true
    restart: always

  # cloudflared:
  #   image: cloudflare/cloudflared
  #   container_name: cloudflared-tunnel
  #   restart: always
  #   command: tunnel run
  #   environment:
  #     - TUNNEL_TOKEN=abcdefghijklmnopqrstuvwxyz0123456789

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - WEBUI_PORT=1916
      - TORRENTING_PORT=6881
    volumes:
      - ./qbittorrent/config:/config
      - ./qbittorrent/app/vuetorrent:/opt/vuetorrent/
      - ./qbittorrent/app/nightwalker:/opt/nightwalker/
      - /media-server/data/torrents:/data/torrents
    restart: always
    depends_on:
      - nordlynx
    network_mode: service:nordlynx

    # SABnzbd
  SABnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd

    volumes:
      - ./sabnzbd:/config
      - /media-server/data/usenet:/data/usenet
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
    ports:
      - 8088:8080
    restart: always

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/data:/data
    ports:
      - "9000:9000"

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    secrets:
      - postgres_password
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password

  pgAdmin:
    image: dpage/pgadmin4:latest
    container_name: pgAdmin
    restart: always
    ports:
      - "8888:80"
    secrets:
      - email
      - postgres_password
    environment:
      - PGADMIN_DEFAULT_EMAIL=oisinpeppard@hotmail.com
      - PGADMIN_DEFAULT_PASSWORD_FILE=/run/secrets/postgres_password

  nginx:
    container_name: nginx
    image: "jc21/nginx-proxy-manager:latest"
    restart: unless-stopped
    ports:
      # These ports are in format <host-port>:<container-port>
      - "80:80" # Public HTTP Port
      - "443:443" # Public HTTPS Port
      - "81:81" # Admin Web Port
      # - '21:21' # FTP

    environment:
      DISABLE_IPV6: "true"

    volumes:
      - ./nginx:/data
      - ./letsencrypt:/etc/letsencrypt
  nordlynx:
    container_name: nordlynx
    image: ghcr.io/bubuntux/nordlynx
    cap_add:
      - NET_ADMIN #required
      - SYS_MODULE
    environment:
      - PRIVATE_KEY_FILE=/run/secrets/nord_private_key
      - QUERY=filters\[servers_groups\]\[identifier\]=legacy_p2p ##
      - NET_LOCAL=192.168.0.0/16 ##
    secrets:
      - nord_private_key
    hostname: nordlynx
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 1916:1916 # ports forwarded for the qBittorrent container
      - 9696:9696 # port forwarded for the Prowlarr container
      - 8191:8191 # port forwarded for the flaresolverr container
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1 # maybe
      - net.ipv4.conf.all.rp_filter=2 # maybe; set reverse path filter to loose mode
      - net.ipv6.conf.all.disable_ipv6=1 # disable ipv6; recommended if using ipv4 only
      - net.ipv4.ip_forward=1

  navidrome:
    image: deluan/navidrome:latest
    container_name: navidrome
    user: 1000:1000

    ports:
      - "4533:4533"
    restart: always
    environment:
      # Optional: put your config options customization here. Examples:
      ND_SCANSCHEDULE: 1h
      ND_LOGLEVEL: info
      ND_SESSIONTIMEOUT: 24h
      ND_BASEURL: ""
    volumes:
      - "./navidrome:/data"
      - "/media-server/data/media/music/:/music:ro"

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - /path/to/data:/config
      - /path/to/calibre/library:/books
    ports:
      - 8083:8083
    restart: always

  notifiarr:
    container_name: notifiarr
    hostname: notifiarr
    image: golift/notifiarr
    restart: always
    ports:
      - "5454:5454"
    volumes:
      - ./notifiarr:/config
      - /var/run/utmp:/var/run/utmp
      - /etc/machine-id:/etc/machine-id
    environment:
      - DN_API_KEY=/run/secrets/notifiarr_api_key
    # secrets:
    #   - notifiarr_api_key

  # adguardhome:
  #   image: 'adguard/adguardhome:latest'
  #   container_name: 'adguard'
  #   hostname: 'adguard'
  #   restart: 'on-failure:3'
  #   # networks:
  #   #   - 'adguard'
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ./adguard/data:/opt/adguardhome/work
  #     - ./adguard/conf:/opt/adguardhome/conf
  #     # The next two lines are only necessary if you're using a custom SSL cert
  #     # signed by a private CA trusted by your host machine:
  #     #- '/usr/local/share/ca-certificates:/usr/local/share/ca-certificates'
  #     #- '/etc/ssl/certs:/etc/ssl/certs'
  #   ports:
  #     # Plain DNS
  #     - '53:53/tcp'
  #     - '53:53/udp'
  #     # AdGuard Home Admin Panel as well as DNS-over-HTTPS
  #     - '80:80/tcp'
  #     - '443:443/tcp'
  #     - '443:443/udp'
  #     - '3001:3000/tcp'
  #     # DNS-over-TLS
  #     - '853:853/tcp'
  #     # DNS-over-QUIC
  #     - '784:784/udp'
  #     - '853:853/udp'
  #     - '8853:8853/udp'
  #     # DNSCrypt
  #     - '5443:5443/tcp'
  #     - '5443:5443/udp'

  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code-server
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - PROXY_DOMAIN=code-server.my.domain #optional
      - DEFAULT_WORKSPACE=/config/workspace #optional
    volumes:
      - /path/to/appdata/config:/config
    ports:
      - 8443:8443
    restart: always

  # meshnet:
  #   image: ghcr.io/mattstechinfo/meshnet:latest
  #   restart: always
  #   cap_add:
  #     - NET_ADMIN
  #     - NET_RAW
  #   env_file: meshnet/.env
  #   hostname: iqbal    # Make sure hostname is set! Without it, every restart will add a new peer to your Meshnet.

secrets:
  sonarr_api_key:
   file: ./secrets/sonarr_api_key
  radarr_api_key:
   file: ./secrets/radarr_api_key
  lidarr_api_key:
   file: ./secrets/lidarr_api_key
  readarr_api_key:
   file: ./secrets/readarr_api_key
  notifiarr_api_key:
    file: ./secrets/notifiarr_key
  nord_private_key:
    file: ./secrets/nord_private_key
  postgres_password:
    file: ./secrets/postgres_password
  email:
    file: ./secrets/email_address
